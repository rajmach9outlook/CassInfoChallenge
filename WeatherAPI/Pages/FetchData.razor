@page "/fetchdata"
@inject HttpClient Http
@using WeatherAPI.Core.Data;
@using WeatherAPI.Services;


<div class="form-group row">
    <label class="col-sm-10" style="color: #8223cf;font-size:28px;text-align:center"><u>Retrieve Weather Data</u></label>
</div>

<div class="form-group row">
    <label class="col-sm-1">Longitude: </label>
    <input type="number" id="longitudeInput" class="form-control col-sm-3" placeholder="Enter a longitude" pattern="^\d*(\.\d{0,4})?$" @bind-value="longitude" />
    <label class="col-sm-1">Latitude: </label>
    <input type="number" id="latitudeInput" class="form-control col-sm-3" placeholder="Enter a latitude" pattern="^\d*(\.\d{0,4})?$" @bind-value="latitude" />
</div>

<div class="form-group row">
    <input type="button" value="Search" @onclick="@SearchWeather" />
</div>

@if (loading)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (weatherData != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>City</th>
                    <th>State</th>
                    <th>Timezone</th>
                    <th>Radar Station</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@weatherData.properties.relativeLocation.properties.city</td>
                    <td>@weatherData.properties.relativeLocation.properties.state</td>
                    <td>@weatherData.properties.timeZone</td>
                    <td>@weatherData.properties.radarStation</td>
                </tr>
            </tbody>
        </table>

        @if (forecast != null)
        {
            <div class="form-group row">
                <label class="col-sm-10" style="color: #8223cf; font-size: 25px; text-align: center">Daily Forecast</label>
            </div>

            <table class="table">
                <thead>
                    <tr>
                        <th colspan="2">Day</th>
                        <th>Temparature</th>
                        <th>Wind Speed</th>
                        <th>Visual</th>
                        <th colspan="3">Forecast</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var period in forecast.properties.periods)
                    {
                    <tr>
                        <td colspan="2">@period.name</td>
                        <td>@period.temperature @period.temperatureUnit</td>
                        <td>@period.windSpeed @period.windDirection</td>
                        <td><img src="@period.icon" /></td>
                        <td colspan="3">@period.shortForecast</td>
                    </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p><em>Forecast not found for the given coordinates!</em></p>
        }
    }
    else
    {
        <p><em>No weather data found for the given coordinates!</em></p>
    }
}

@code {

  private async Task SearchWeather()
  {
      try
      {
          weatherData = null;
          forecast = null;

          weatherData = await WeatherDataService.GetWeather(this.latitude, this.longitude);

          if (weatherData != null && !string.IsNullOrEmpty(weatherData.properties.forecast))
          {
              forecast = await WeatherDataService.GetForecast(weatherData.properties.forecast.Replace("https://api.weather.gov/", string.Empty));
          }

          loading = false;
      }
      catch (Exception ex)
      {
          throw ex;
      }
  }

}
